name: Build and Extract APK to Branch

on:
  workflow_dispatch:
    inputs:
      lang:
        description: Extension language (en, ar, es, pt...)
        default: 'id'
        required: false
      extension:
        description: Target extension name
        required: true
      git-repo:
        description: Git repo (Optional, defaults to <your name>/extensions)
        default: 'imgview/ext'
        required: false
      git-ref:
        description: Git Ref (Optional, defaults to main)
        default: 'main'
        required: false
      target-branch:          # Input baru untuk menentukan branch target
        description: Target branch for APK extraction
        default: 'apk-branch' # Default branch target jika tidak ditentukan
        required: false

env:
  EXTPATH: ${{ github.event.inputs.lang }}/${{ github.event.inputs.extension }}
  EXTSLUG: ${{ github.event.inputs.lang }}:${{ github.event.inputs.extension }}
  REPO: ${{ github.event.inputs.git-repo }}

jobs:
  build-and-extract:
    name: Build and Extract APK to Branch
    runs-on: ubuntu-latest
    steps:
      - name: Check inputs
        run: |
          set -e
          if [[ -z "${{ env.REPO }}" ]]; then
            echo "REPO=${{ github.repository_owner }}/extensions" >> $GITHUB_ENV
          fi

      - name: Clone Repository (Latest)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          fetch-depth: 0
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build APK
        env:
          CI: false
        run: ./gradlew -p src ${{ env.EXTSLUG }}:assembleDebug

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ github.event.inputs.lang }}-${{ github.event.inputs.extension }}"
          path: "src/${{ env.EXTPATH }}/build/outputs/apk/debug/*.apk"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ github.event.inputs.lang }}-${{ github.event.inputs.extension }}"
          path: extracted_apk

      - name: Checkout target branch for APK extraction
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          ref: ${{ github.event.inputs.target-branch }} # Menggunakan input branch target
          fetch-depth: 0

      - name: Copy extracted APK to branch
        run: |
          cp extracted_apk/*.apk .

      - name: Commit and push APK to target branch
        run: |
          git add *.apk
          git commit -m "Add APK for ${{ github.event.inputs.lang }}-${{ github.event.inputs.extension }}"
          git push origin ${{ github.event.inputs.target-branch }} # Menggunakan input branch target
